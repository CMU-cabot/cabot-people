services:
  people-base:
    environment:
      - DISPLAY
      - XAUTHORITY=/tmp/.docker.xauth
      - NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,video,display
      - NVIDIA_VISIBLE_DEVICES=all
      - OMP_NUM_THREADS=1
      - HOST_UID
      - HOST_GID
      - HOST_TZ
      - ROS_LOG_DIR
# CaBot
      - CABOT_GAZEBO=${CABOT_GAZEBO:-1}
      - CABOT_SITE
      - CABOT_SHOW_PEOPLE_RVIZ=${CABOT_SHOW_PEOPLE_RVIZ:-0}
      - CABOT_PUBLISH_DETECT_IMAGE=${CABOT_PUBLISH_DETECT_IMAGE:-0}
      - CABOT_USE_REALSENSE=${CABOT_USE_REALSENSE:-0}
      - CABOT_REALSENSE_SERIAL
      - CABOT_CAMERA_NAME
      - CABOT_CAMERA_RGB_FPS
      - CABOT_CAMERA_DEPTH_FPS
      - CABOT_CAMERA_RESOLUTION
      - CABOT_DETECT_VERSION=${CABOT_DETECT_VERSION:-3}
      - CABOT_DETECT_PEOPLE_CONF_THRES=${CABOT_DETECT_PEOPLE_CONF_THRES:-0.6}
      - CABOT_DETECT_PEOPLE_CLEAR_TIME=${CABOT_DETECT_PEOPLE_CLEAR_TIME:-0.2}
      - CABOT_LOW_OBSTABLE_DETECT_VERSION=${CABOT_LOW_OBSTABLE_DETECT_VERSION:-0}
      - CABOT_HEADLESS
      - CABOT_DETECT_PEOPLE_FPS
      - CABOT_PEOPLE_TRACK_FPS
      - CABOT_PEOPLE_PREDICT_FPS
      - RMW_IMPLEMENTATION
      - ROS_LOCALHOST_ONLY
      - ROS_DOMAIN_ID
      - CYCLONEDDS_URI
      - CYCLONEDDS_NETWORK_INTERFACE_NAME
      - CYCLONEDDS_NETWORK_INTERFACE_AUTODETERMINE # set automatically by launch.sh
    volumes:
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth
    privileged: true
    devices:
      - /dev/dri
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    network_mode: host
    stop_signal: SIGINT
    stop_grace_period: 30s

  people-nuc-base:
    extends:
      service: people-base
    image: cmucal/cabot-people-nuc:${CABOT_LAUNCH_IMAGE_TAG:-latest}
    build:
      context: ./docker/people
      additional_contexts:
        - src=./
      dockerfile: Dockerfile.nuc
      args:
        - BASE_IMAGE=${NUC_BASE_IMAGE:-cabot-base}
      x-bake:
        tags:
          - ${REGISTRY:-cmucal}/cabot-people-nuc
        platforms:
          - linux/amd64
        output:
          - type=registry
    command:
      - "/launch.sh"
      - "-W"                                # wait roscore
      - "-K"                                # tracking
      - "-O"                                # obstacle

  people-nuc-dev-base:
    extends:
      service: people-nuc-base
    environment: &dev-environment
      - OVERRIDE_LAUNCH_PROCESS_OUTPUT=screen
      - RCUTILS_CONSOLE_OUTPUT_FORMAT={time}	[{severity}]	[{file_name}#L{line_number}][{name}]	{message}
    volumes:
      - ./cabot-common/cabot_common:/home/developer/people_nuc_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/people_nuc_ws/src/cabot_msgs
      - ./cabot_people:/home/developer/people_nuc_ws/src/cabot_people
      - ./track_people_py:/home/developer/people_nuc_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_nuc_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_nuc_ws/src/track_people_cpp

  people-nuc-dev:
    extends:
      service: people-nuc-dev-base
    environment:
      - CABOT_GAZEBO=0
      - CABOT_USE_REALSENSE=1
    volumes:
      - ./docker/home:/home/developer/

  people-nuc-prod-base:
    extends:
      service: people-nuc-base
    volumes:
      - ./docker/home/.ros:/home/developer/.ros

  people-nuc-prod:
    extends:
      service: people-nuc-prod-base
    environment:
      - CABOT_GAZEBO=0
      - CABOT_USE_REALSENSE=1

  people-all-base:
    extends:
      service: people-base
    image: cmucal/cabot-people:${CABOT_LAUNCH_IMAGE_TAG:-latest}
    build:
      context: ./docker/people
      additional_contexts:
        - src=./
      args:
        - BASE_IMAGE=${BASE_IMAGE:-cabot-gpu-base}
      x-bake:
        tags:
          - ${REGISTRY:-cmucal}/cabot-people
        platforms:
          - linux/amd64
          - linux/arm64
        output:
          - type=registry
    command:
      - "/launch.sh"
      # - "/launch-core.sh"                 # use core dump
      - "-W"                                # wait roscore
      # - "-p"                                # people topic is simulation groundtruth
      - "-D"                                # detection
      - "-K"                                # tracking
      - "-O"                                # obstacle

  people-all-dev-base:
    extends:
      service: people-all-base
    environment: *dev-environment
    volumes:
      - ./cabot-common/cabot_common:/home/developer/people_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/people_ws/src/cabot_msgs
      - ./cabot_people:/home/developer/people_ws/src/cabot_people
      - ./track_people_py:/home/developer/people_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_ws/src/track_people_cpp

  people-all-dev:
    extends:
      service: people-all-dev-base
    environment:
      - CABOT_GAZEBO=0
      - CABOT_USE_REALSENSE=1
    volumes:
      - ./docker/home:/home/developer/

  people-all-prod-base:
    extends:
      service: people-all-base
    volumes:
      - ./docker/home/.ros:/home/developer/.ros

  people-all-prod:
    extends:
      service: people-all-prod-base
    environment:
      - CABOT_GAZEBO=0
      - CABOT_USE_REALSENSE=1

  people-detection-base:
    extends:
      service: people-all-base
    command:
      - "/launch.sh"
      # - "/launch-core.sh"   # use core dump
      - "-W"                                # wait roscore
      # - "-p"                                # people topic is simulation groundtruth
      - "-D"                                # detection
      - "-a"                                # no resetrs individually

  people-detection-dev-base:
    extends:
      service: people-detection-base
    environment: *dev-environment
    volumes:
      - ./cabot-common/cabot_common:/home/developer/people_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/people_ws/src/cabot_msgs
      - ./cabot_people:/home/developer/people_ws/src/cabot_people
      - ./track_people_py:/home/developer/people_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_ws/src/track_people_cpp

  people-detection-prod-base:
    extends:
      service: people-detection-base
    volumes:
      - ./docker/home/.ros:/home/developer/.ros

  people-track-base:
    extends:
      service: people-all-base
    command:
      - "/launch.sh"
      - "-W"                                # wait roscore
      - "-K"                                # tracking
      - "-O"                                # obstacle

  people-track-dev-base:
    extends:
      service: people-track-base
    environment: *dev-environment
    volumes:
      - ./cabot-common/cabot_common:/home/developer/people_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/people_ws/src/cabot_msgs
      - ./cabot_people:/home/developer/people_ws/src/cabot_people
      - ./track_people_py:/home/developer/people_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_ws/src/track_people_cpp

  people-track-prod-base:
    extends:
      service: people-track-base
    volumes:
      - ./docker/home/.ros:/home/developer/.ros

  people-framos-all-base:
    extends:
      service: people-all-base
    image: cmucal/cabot-people-framos:${CABOT_LAUNCH_IMAGE_TAG:-latest}
    build:
      context: ./docker/people
      dockerfile: Dockerfile.framos
      x-bake:
        tags:
          - ${REGISTRY:-cmucal}/cabot-people-framos
        platforms:
          - linux/amd64
          - linux/arm64
        output:
          - type=registry

  people-framos-all-dev-base:
    extends:
      service: people-framos-all-base
    environment: *dev-environment
    volumes:
      - ./cabot-common/cabot_common:/home/developer/people_framos_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/people_framos_ws/src/cabot_msgs
      - ./cabot_people:/home/developer/people_framos_ws/src/cabot_people
      - ./track_people_py:/home/developer/people_framos_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_framos_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_framos_ws/src/track_people_cpp

  people-framos-all-dev:
    extends:
      service: people-framos-all-dev-base
    environment:
      - CABOT_GAZEBO=0
      - CABOT_USE_REALSENSE=1
    volumes:
      - ./docker/home:/home/developer/

  people-framos-all-prod-base:
    extends:
      service: people-framos-all-base
    volumes:
      - ./docker/home/.ros:/home/developer/.ros

  people-framos-camera-base:
    extends:
      service: people-framos-all-base
    command:
      - "/launch.sh"
      # - "/launch-core.sh"   # use core dump
      - "-W"                                # wait roscore
      # - "-p"                                # people topic is simulation groundtruth
      - "-c 2"                              # use FRAMOS camera
      # - "-a"                                # no resetrs individually

  people-framos-camera-dev-base:
    extends:
      service: people-framos-camera-base
    environment: *dev-environment
    volumes:
      - ./cabot-common/cabot_common:/home/developer/people_framos_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/people_framos_ws/src/cabot_msgs
      - ./cabot_people:/home/developer/people_framos_ws/src/cabot_people
      - ./track_people_py:/home/developer/people_framos_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_framos_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_framos_ws/src/track_people_cpp

  people-framos-camera-prod-base:
    extends:
      service: people-framos-camera-base
    volumes:
      - ./docker/home/.ros:/home/developer/.ros

  people-framos-all-prod:
    extends:
      service: people-framos-all-prod-base
    environment:
      - CABOT_GAZEBO=0
      - CABOT_USE_REALSENSE=1

  people-framos-detection-base:
    extends:
      service: people-framos-all-base
    command:
      - "/launch.sh"
      # - "/launch-core.sh"   # use core dump
      - "-W"                                # wait roscore
      # - "-p"                                # people topic is simulation groundtruth
      - "-D"                                # detection

  people-framos-detection-dev-base:
    extends:
      service: people-framos-detection-base
    environment: *dev-environment
    volumes:
      - ./cabot-common/cabot_common:/home/developer/people_framos_ws/src/cabot_common
      - ./cabot-common/cabot_msgs:/home/developer/people_framos_ws/src/cabot_msgs
      - ./cabot_people:/home/developer/people_framos_ws/src/cabot_people
      - ./track_people_py:/home/developer/people_framos_ws/src/track_people_py
      - ./track_people_msgs:/home/developer/people_framos_ws/src/track_people_msgs
      - ./track_people_cpp:/home/developer/people_framos_ws/src/track_people_cpp

  people-framos-detection-prod-base:
    extends:
      service: people-framos-detection-base
    volumes:
      - ./docker/home/.ros:/home/developer/.ros
