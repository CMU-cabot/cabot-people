# Copyright (c) 2021  IBM Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

ARG BASE_IMAGE=cabot-base
ARG FROM_IMAGE=cmucal/${BASE_IMAGE}:humble-base-custom-mesa

FROM $FROM_IMAGE AS build
ARG ROS_DISTRO=humble \
    UBUNTU_DISTRO=jammy \
    GAZEBOV=11 \
    TZ="Etc/UTC"

ENV ROS_DISTRO=$ROS_DISTRO \
    OPEN3D_VERSION=0.15.1 \
    TZ=$TZ

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt update && \
	apt install -y --no-install-recommends \
	git \
	gosu \
	libarmadillo-dev \
        libglu1-mesa-dev \
        libfreetype6-dev \
	libc++-dev \
	libopencv-dev \
	ros-$ROS_DISTRO-cv-bridge \
	ros-$ROS_DISTRO-diagnostic-updater \
	ros-$ROS_DISTRO-tf2-geometry-msgs \
	ros-$ROS_DISTRO-tf-transformations \
        libfreetype6-dev \
        libglu1-mesa-dev \
	python-tk \
	python3 \
	python3-dev \
	python3-pip \
	python-tk \
	python3-vcstool \
	python3-opencv \
	rsync \
	software-properties-common \
	unzip \
	usbutils \
	wget \
	xorg-dev \
	xterm \
	&& \
	apt clean && \
	rm -rf /var/lib/apt/lists/*

RUN pip3 install --no-cache-dir \
	matplotlib==3.6.3 \
	scipy==1.10.0 \
	filterpy==1.4.5 \
	pyyaml==5.4.1 \
	numpy==1.24.1 \
	open3d==0.16.0 \
	transforms3d==0.4.1 \
	mmdeploy==1.3.1 \
	mmdeploy-runtime==1.3.1

# install open3d for c++
RUN cd /tmp && \
	wget https://github.com/isl-org/Open3D/releases/download/v${OPEN3D_VERSION}/open3d-devel-linux-x86_64-cxx11-abi-${OPEN3D_VERSION}.tar.xz && \
	tar xf open3d-devel-linux-x86_64-cxx11-abi-${OPEN3D_VERSION}.tar.xz && \
	cp -r open3d-devel-linux-x86_64-cxx11-abi-${OPEN3D_VERSION}/* /usr/local && \
	rm -rf *

# install mmdeploy for c++
RUN cd /opt && \
	wget https://github.com/open-mmlab/mmdeploy/releases/download/v1.3.1/mmdeploy-1.3.1-linux-x86_64.tar.gz && \
	mkdir mmdeploy && \
	tar xf mmdeploy-1.3.1-linux-x86_64.tar.gz -C mmdeploy --strip-components=1 && \
	cd mmdeploy && \
	./build_sdk.sh /usr/lib/x86_64-linux-gnu/cmake/opencv4 && \
	cd ../ && \
	rm mmdeploy-1.3.1-linux-x86_64.tar.gz
ENV MMDeploy_DIR=/opt/mmdeploy/lib/cmake/MMDeploy
ENV ONNXRUNTIME_DIR=/opt/mmdeploy/thirdparty/onnxruntime
ENV LD_LIBRARY_PATH=$ONNXRUNTIME_DIR/lib:$LD_LIBRARY_PATH

COPY ./launch.nuc.sh /launch.sh

# setup for display
ENV USERNAME developer

### replace 1000 with your user/group id
ARG UID=1000
RUN useradd -m $USERNAME && \
        echo "$USERNAME:$USERNAME" | chpasswd && \
        usermod --shell /bin/bash $USERNAME && \
        usermod -aG sudo $USERNAME && \
        mkdir -p /etc/sudoers.d/ && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME && \
        usermod  --uid $UID $USERNAME && \
        groupmod --gid $UID $USERNAME

ENV HOME /home/$USERNAME

WORKDIR $HOME/people_nuc_ws
RUN chown $USERNAME:$USERNAME $HOME/people_nuc_ws

FROM build as cache

USER $USERNAME

COPY --from=src ./cabot-common/cabot_common src/cabot_common
COPY --from=src ./cabot-common/cabot_msgs src/cabot_msgs
COPY --from=src ./cabot_people src/cabot_people
COPY --from=src ./track_people_py src/track_people_py
COPY --from=src ./track_people_msgs src/track_people_msgs
COPY --from=src ./track_people_cpp src/track_people_cpp

RUN /ros_entrypoint.sh /launch.sh build -s

FROM build as final

# change location of ros base
COPY ros_entrypoint.sh /ros_entrypoint.sh

COPY --chown=$USERNAME:$USERNAME --from=cache $HOME/people_nuc_ws/install $HOME/people_nuc_ws/install
COPY --chown=$USERNAME:$USERNAME --from=cache $HOME/people_nuc_ws/src/cabot_people/script $HOME/people_nuc_ws/src/cabot_people/script
